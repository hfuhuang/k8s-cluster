---
- hosts: all
  become: true
  tasks:
  - import_tasks: common-tasks.yml

  - name: Initialize the Kubernetes cluster using kubeadm
    command: "{{ item }}"
    args:
      creates: /tmp/.k8s_init
    with_items:
     - kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16
     - touch /tmp/.k8s_init
     
#  - name: set api server proxy
#    shell: kubectl proxy --port=8080 &
#    args:
#      creates: /tmp/.api_proxy

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install calico pod network
    become: false
    command: "{{ item }}"
    args:
      creates: /tmp/.calico
    with_items:
     - kubectl apply -f https://docs.projectcalico.org/v3.9/manifests/calico.yaml
     - touch /tmp/.calico  
    

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  - name: Installation Helm v2.15
    unarchive:
      src: https://get.helm.sh/helm-v2.15.0-rc.1-linux-amd64.tar.gz
      dest: /usr/local/bin
      extra_opts:
      - --strip=1
      - --wildcards
      - '*/helm'
      remote_src: yes
  
#  - name: pause 2 minutes to let the basic pods in running state
#    pause:
#      minutes: 2
    
#  - name: Helm In-Cluster Installation
#    command: helm init
      
  handlers:
    - name: docker status
      service: name=docker state=started
